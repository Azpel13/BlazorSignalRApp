@using Microsoft.AspNetCore.SignalR.Client;;
@inject NavigationManager NavigationManager
@implements IDisposable
@page "/ChatSignal"
<h3>Chat Signal</h3>

<div class="form-group">
    <label>
        Usuario:
        <input @bind="UserInput" />
    </label>
</div>
<div class="form-group">
    <label>
        Mensajé:
        <input @bind="MessageInput" size="50" />
    </label>
</div>
<button @onclick="Send" disabled="@(!IsConnected)">Enviar</button>

<hr />

<ul>
    @foreach (var Message in Messages)
    {
        <li>@Message</li>
    }
</ul>

@code {

    private HubConnection HubConnection;
    private List<string> Messages = new List<string>();
    private string UserInput;
    private string MessageInput;

    protected override async Task OnInitializedAsync()
    {
        HubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
            .Build();

        HubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var EncodedMsg = $"{user}:{message}";
            Messages.Add(EncodedMsg);
            StateHasChanged();
        });

        await HubConnection.StartAsync();
    }

    Task Send() =>
        HubConnection.SendAsync("SendMessage", UserInput, MessageInput);

    public bool IsConnected =>
        HubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = HubConnection.DisposeAsync();
    }
}
